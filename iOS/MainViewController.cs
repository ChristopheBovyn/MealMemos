// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Threading.Tasks;
using AsyncAwaitBestPractices;
using GalaSoft.MvvmLight.Ioc;
using MealMemos.Interfaces;
using UIImageExtension;
using UIKit;
using MealMemos.Extensions;
using System.Collections.Generic;
using Plugin.CloudFirestore;
using GPS.iOS;
using Plugin.FirebaseAuth;

namespace MealMemos.iOS
{
    public partial class MainViewController : UIViewController
    {
        private TableViewSource viewSource;
        private DateTime currrentDateTime = DateTime.Today;

        public MainViewController(IntPtr handle) : base(handle)
        {

        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            this.currentDateBtn.SetTitle(this.DateTimeToDefaultFormat(), UIControlState.Normal);
            this.currentDateBtn.TouchUpInside += OpenDatePicker;
            this.registerServices();
            this.mealTableView.TranslatesAutoresizingMaskIntoConstraints = false;
            this.mealTableView.SeparatorStyle = UITableViewCellSeparatorStyle.None;
            this.mealTableView.SetEditing(true, true);

            this.applicationTabBar.BackgroundColor = UIColor.FromName("applicationColor");

            this.addDishBtn.Layer.CornerRadius = this.addDishBtn.Frame.Width / 2;
            this.addDishBtn.TouchUpInside += this.AddDishAction;

            this.SetTabBarItems();
            this.LoadDishesAsync().SafeFireAndForget();

            this.viewSource = new TableViewSource(new List<string>(),this.DateTimeToDefaultFormat());
            this.viewSource.Identifier = this.applicationTabBar.SelectedItem.Title;
            this.mealTableView.Source = this.viewSource;

            this.applicationTabBar.ItemSelected += SwitchMeal;

            this.previousBtn.TouchUpInside += previousAction;
            this.nextBtn.TouchUpInside += nextAction;
        }

        private void SwitchMeal(object sender, UITabBarItemEventArgs e)
        {
            this.viewSource = new TableViewSource(new List<string>(),this.DateTimeToDefaultFormat());
            this.viewSource.Identifier = this.applicationTabBar.SelectedItem.Title;
            this.mealTableView.Source = this.viewSource;
            this.LoadDishesAsync().SafeFireAndForget();
            this.mealTableView.ReloadData();
        }

        private void resetTableView()
        {
            this.viewSource = new TableViewSource(new List<string>(), this.DateTimeToDefaultFormat());
            this.viewSource.Identifier = this.applicationTabBar.SelectedItem.Title;
            this.mealTableView.Source = this.viewSource;
            this.LoadDishesAsync().SafeFireAndForget();
            this.mealTableView.ReloadData();
        }

        private string DateTimeToDefaultFormat()
        {
            return this.currrentDateTime.Date.ToString("yyyy-MM-dd");
        }

        private void previousAction(object sender, EventArgs e)
        {
            this.currrentDateTime = this.currrentDateTime.AddDays(-1);
            this.currentDateBtn.SetTitle(this.DateTimeToDefaultFormat(), UIControlState.Normal);
            this.resetTableView();
        }

        private void nextAction(object sender, EventArgs e)
        {
            this.currrentDateTime = this.currrentDateTime.AddDays(1);
            this.currentDateBtn.SetTitle(this.DateTimeToDefaultFormat(), UIControlState.Normal);
            this.resetTableView();
        }

        private void SetTabBarItems()
        {
            UIImage breakfast = UIImage.FromBundle("breakfast");
            UIImage diner = UIImage.FromBundle("diner");
            UIImage souper = UIImage.FromBundle("souper");
            UIImage collation = UIImage.FromBundle("collation");
            this.applicationTabBar.SelectedImageTintColor = UIColor.White;
            this.applicationTabBar.SelectedItem = this.applicationTabBar.Items[0];

            this.applicationTabBar.Items[0].Image = breakfast.ResizeImage(0.25f);
            this.applicationTabBar.Items[0].Title = "Breakfast";

            this.applicationTabBar.Items[1].Image = diner.ResizeImage(0.25f);
            this.applicationTabBar.Items[1].Title = "Diner";

            this.applicationTabBar.Items[2].Image = souper.ResizeImage(0.25f);
            this.applicationTabBar.Items[2].Title = "Souper";

            this.applicationTabBar.Items[3].Image = collation.ResizeImage(0.25f);
            this.applicationTabBar.Items[3].Title = "Collation";

        }

        private void OpenDatePicker(object sender, EventArgs e)
        {
            this.datepicker.Mode = UIDatePickerMode.Date;
            if (this.datepicker.Hidden)
            {
                this.datepicker.Hidden = false;
                this.verticalSpace.Constant = 150;
            }
            else
            {
                this.datepicker.Hidden = true;
                if (this.currrentDateTime != (DateTime)this.datepicker.Date)
                {
                    this.currrentDateTime = (DateTime)this.datepicker.Date;
                    this.currentDateBtn.SetTitle(this.DateTimeToDefaultFormat(), UIControlState.Normal);
                    this.resetTableView();
                }
                this.verticalSpace.Constant = 0;
            }
        }

        private void AddDishAction(object sender, EventArgs e)
        {
            this.OpenPopup().SafeFireAndForget();
        }

        private async Task OpenPopup()
        {
            var result = await SimpleIoc.Default.GetInstance<IMealPopup>().OpenPopupWithResult();
            if (!result.IsNullOrEmpty())
            {
                this.SetDish(result);
            }
            else
            {
                System.Diagnostics.Debug.WriteLine("MealViewController : OpenPopup() : result is null");
            }
        }

        private void SetDish(string dishValue)
        {
            this.viewSource.AddElement(dishValue);
            this.mealTableView.ReloadData();
            this.viewSource.Save();
        }

        private async Task LoadDishesAsync()
        {
            try
            {
                var itemTitle = this.applicationTabBar.SelectedItem.Title;
                var user = CrossFirebaseAuth.Current.Instance.CurrentUser;
                var document = await CrossCloudFirestore.Current
                                                        .Instance
                                                        .GetCollection("meals")
                                                        .GetDocument(user.Uid)
                                                        .GetCollection(this.DateTimeToDefaultFormat())
                                                        .GetDocument(itemTitle)
                                                        .GetDocumentAsync();
                foreach (string dish in document.Data.Values)
                {
                    this.viewSource.AddElement(dish);
                }
                this.mealTableView.ReloadData();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }
        }

        private void registerServices()
        {
            SimpleIoc.Default.Register<IMealPopup>(() => { return new IosMealPopup(this); });
        }
    }
}
