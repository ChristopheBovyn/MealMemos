// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using UIKit;
using Xamarin.Essentials;
using Masonry;
using System.Diagnostics;
using MealMemos.Models;

namespace MealMemos.iOS
{
    public partial class HomepageViewController : UIViewController, IUIPageViewControllerDataSource
    {
        private Team team;

        private int currentMemberIndex = 0;

        private List<string> bgcolors;

        private UIPageControl pageControl;
        public HomepageViewController(IntPtr handle) : base(handle)
        {

            this.team = new Team();
            this.bgcolors = setColors();
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            configurePageViewController();
        }

        private void configurePageViewController()
        {
            var pageViewController = (CustomPageViewController)Storyboard?.InstantiateViewController(identifier: "CustomPageViewController");
            pageViewController.DataSource = this;
            AddChildViewController(pageViewController);
            pageViewController.View.TranslatesAutoresizingMaskIntoConstraints = false;
            pageViewController.DidMoveToParentViewController(this);
            this.contentView.AddSubview(pageViewController.View);

            pageViewController.View.MakeConstraints(make => {
                make.Width.EqualTo(this.contentView);
                make.Height.EqualTo(this.contentView);
                make.Center.EqualTo(this.contentView);
            });

            this.pageControl = new UIPageControl
            {
                CurrentPageIndicatorTintColor = UIColor.White,
                PageIndicatorTintColor = UIColor.Black,
                TranslatesAutoresizingMaskIntoConstraints = false,
                Pages = team.MemberCount,
                CurrentPage = 0
            };
            this.contentView.Add(pageControl);

            this.pageControl.MakeConstraints(make =>
            {
                make.Bottom.EqualTo(this.contentView.Bottom()).Offset(-100);
                make.CenterX.EqualTo(this.contentView);
            });

            var startingViewController = memberViewControllerAtIndex(currentMemberIndex);
            List<MemberViewController> allMembers = new List<MemberViewController>();
            allMembers.Add(startingViewController);
            var list = allMembers.ToArray();
            pageViewController.SetViewControllers(list, UIPageViewControllerNavigationDirection.Forward, false, null);
        }

        private MemberViewController memberViewControllerAtIndex(int index)
        {
            if (index >= team.MemberCount || team.MemberCount == 0)
            {
                return null;
            }
            var memberViewController = (MemberViewController)Storyboard.InstantiateViewController("MemberViewController");
            memberViewController.firstnameText = this.team[index].Firstname;
            memberViewController.index = index;
            if (index >= this.bgcolors.Count)
                memberViewController.View.BackgroundColor = UIColor.Orange;
            else
                memberViewController.View.BackgroundColor = ColorConverters.FromHex(this.bgcolors[index]).ToPlatformColor();
            return memberViewController;
        }

        public UIViewController GetPreviousViewController(UIPageViewController pageViewController, UIViewController referenceViewController)
        {
            var current = (MemberViewController)referenceViewController;
            var index = current.index;
            if (index == 0)
            {
                return null;
            }

            this.pageControl.CurrentPage = index - 1;
            Debug.WriteLine("Remove");
            return this.memberViewControllerAtIndex(index);
        }

        public UIViewController GetNextViewController(UIPageViewController pageViewController, UIViewController referenceViewController)
        {
            var current = (MemberViewController)referenceViewController;
            var index = current.index;
            if (index == team.MemberCount)
            {
                return null;
            }
     
            this.pageControl.CurrentPage = index+1;
            Debug.WriteLine("Add");
            return this.memberViewControllerAtIndex(index);
        }

        private List<string> setColors()
        {
            List<string> colors = new List<string>();
            colors.Add(Models.Color.Blue);
            colors.Add(Models.Color.Gray);
            colors.Add(Models.Color.Green);
            colors.Add(Models.Color.Yellow);
            colors.Add(Models.Color.Magenta);
            return colors;
        }
    }
}
